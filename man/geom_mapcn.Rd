% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_mapcn.R
\name{geom_mapcn}
\alias{geom_mapcn}
\title{Plot China Map with Customizable Options}
\usage{
geom_mapcn(
  data = NULL,
  admin_level = "province",
  crs = "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs",
  color = "black",
  fill = "white",
  linewidth = 0.5,
  filter_attribute = NULL,
  filter = NULL,
  ...
)
}
\arguments{
\item{data}{An \code{sf} object containing China's map data. If \code{NULL},
the function loads the package's default map. Users can select provincial,
municipal, or county-level maps using the \code{admin_level} parameter.}

\item{admin_level}{A character string specifying the administrative level of the map.
Options are \code{"province"} (default), \code{"city"}, or \code{"county"}.
The corresponding GeoJSON files (\code{China_sheng.geojson}, \code{China_shi.geojson},
\code{China_xian.geojson}) must be located in the package's \code{extdata} folder.}

\item{crs}{Coordinate Reference System (CRS). Defaults to
\code{"+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs"}.
Users can specify other CRS strings (e.g., \code{"EPSG:4326"}).}

\item{color}{Border color. Default is \code{"black"}.}

\item{fill}{Fill color. Default is \code{"white"}.}

\item{linewidth}{Line width for borders. Default is \code{0.5}.}

\item{filter_attribute}{Column name for filtering regions (e.g., \code{"name_en"}).}

\item{filter}{Character vector of values to filter specific regions (e.g., \code{c("Beijing", "Shanghai")}).}

\item{...}{Additional parameters passed to \code{geom_sf}.}
}
\value{
A ggplot2 layer for visualizing China's administrative boundaries.
}
\description{
\code{geom_mapcn} provides a flexible interface for visualizing China's administrative boundaries.
Users can select administrative levels (province, city, or county), apply custom projections,
and filter specific regions.
}
\examples{
# Plot provincial map
ggplot() +
  geom_mapcn() +
  theme_minimal()

# Filter specific provinces
ggplot() +
  geom_mapcn(filter_attribute = "name_en", filter = c("Beijing", "Shanghai"), fill = "red") +
  theme_minimal()

# Use a Mercator projection
ggplot() +
  geom_mapcn(crs = "+proj=merc", linewidth = 0.7) +
  theme_minimal()

}
