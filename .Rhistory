# Example 2: Add compass and scale bar
ggplot() +
geom_boundary_cn(compass = TRUE, scale = TRUE) +
theme_minimal()
# Example 3: Custom styling
ggplot() +
geom_boundary_cn(
coastline_color = "blue",
province_color = "grey70",
province_linetype = "dashed"
) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
china_proj <- "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = china_proj) +
annotation_compass(location = "tr", which_north = "true") +
annotation_scalebar(location = "bl") +
coord_sf(crs = china_proj) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
china_proj <- "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = china_proj) +
annotation_compass(location = "tr", which_north = "true") +
annotation_scalebar(location = "bl") +
coord_sf(crs = china_proj) +
theme_minimal()
# Example 2: Add compass and scale bar
ggplot() +
geom_boundary_cn(compass = TRUE, scale = TRUE) +
theme_minimal()
# Example 2: Add compass and scale bar
ggplot() +
geom_boundary_cn(compass = TRUE, scale = TRUE) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
china_proj <- "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = china_proj) +
annotation_compass(location = "tr", which_north = "true") +
annotation_scalebar(location = "bl") +
coord_sf(crs = china_proj) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
china_proj <- "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = 4326) +
annotation_compass(location = "tl", which_north = "true") +
annotation_scalebar(location = "bl") +
coord_sf(crs = china_proj) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
china_proj <- "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn() +
annotation_compass(location = "tl", which_north = "true") +
annotation_scalebar(location = "bl") +
coord_sf(crs = 4326) +
theme_minimal()
Albers <- "+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs"
# Example 4: Advanced usage with custom CRS
china_proj <- "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = Albers) +
annotation_compass(location = "tl", which_north = "true") +
annotation_scalebar(location = "bl") +
coord_sf(crs = Albers) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
china_proj <- "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = 4326) +
annotation_compass(location = "tl", which_north = "true") +
annotation_scalebar(location = "bl") +
coord_sf(crs = 4326) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
china_proj <- "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = Albers) +
annotation_compass(location = "tl", which_north = "true") +
annotation_scalebar(location = "bl", fixed_width = 50000, display_unit = "km") +
coord_sf(crs = Albers) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
china_proj <- "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = Albers) +
annotation_compass(location = "tl", which_north = "true") +
annotation_scalebar(location = "bl", fixed_width = 500000, display_unit = "km") +
coord_sf(crs = Albers) +
theme_minimal()
nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"), quiet = TRUE)
base_plot <- ggplot2::ggplot() +
ggplot2::geom_sf(data = nc, fill = "grey90") +
ggplot2::theme_minimal()
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl")
# Example 2: Ticks style, top-right
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "tr", style = "ticks")
# Example 3: Geographic CRS (EPSG:4326), approximate meters (warns)
base_plot + ggplot2::coord_sf(crs = 4326) +
annotation_scalebar(location = "bl", geographic_mode = "approx_m")
# Example 4: Geographic CRS, display in degrees
base_plot + ggplot2::coord_sf(crs = 4326) +
annotation_scalebar(location = "bl", geographic_mode = "degrees")
# Example 5: Force a 100 km bar (projected CRS)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl", fixed_width = 100000, display_unit = "km")
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl")
?geom_boundary_cn
# Example 1: Basic China map
ggplot() +
geom_boundary_cn() +
theme_minimal()
# Example 2: Add compass and scale bar
ggplot() +
geom_boundary_cn(compass = TRUE, scale = TRUE) +
theme_minimal()
# Example 3: Custom styling
ggplot() +
geom_boundary_cn(
coastline_color = "blue",
province_color = "grey70",
province_linetype = "dashed"
) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
Albers <- "+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = Albers) +
annotation_compass(location = "tl", which_north = "true") +
annotation_scalebar(location = "bl", fixed_width = 500000, display_unit = "km") +
coord_sf(crs = Albers) +
theme_minimal()
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl")
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl",  segments = 1)
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl",  segments = 2)
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl",  segments = 3)
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl",  segments = 4)
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl",  segments = 5)
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl",  segments = 5, minor_tick_height = 0.1 # 让内部刻度可见)
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl",  segments = 5, minor_tick_height = 0.1)
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl",  segments = 5, minor_tick_height = 0.5)
# Example 1: Basic China map
ggplot() +
geom_boundary_cn() +
theme_minimal()
# Example 2: Add compass and scale bar
ggplot() +
geom_boundary_cn(compass = TRUE, scale = TRUE) +
theme_minimal()
# Example 3: Custom styling
ggplot() +
geom_boundary_cn(
coastline_color = "blue",
province_color = "grey70",
province_linetype = "dashed"
) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
Albers <- "+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = Albers) +
annotation_compass(location = "tl", which_north = "true") +
annotation_scalebar(location = "bl", fixed_width = 500000, display_unit = "km") +
coord_sf(crs = Albers) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
Albers <- "+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = Albers) +
annotation_compass(location = "tl", which_north = "true") +
annotation_scalebar(location = "bl", fixed_width = 500000, segments = 2, display_unit = "km") +
coord_sf(crs = Albers) +
theme_minimal()
?annotation_compass
nc <- sf::st_read(system.file("shape/nc.shp", package="sf"), quiet = TRUE)
base <- ggplot2::ggplot() +
ggplot2::geom_sf(data = nc, fill = "grey90") +
ggplot2::theme_minimal()
# Example 1: Grid north (no CRS required), bottom-left
base + annotation_compass()
# Example 2: Custom style & position (top-right)
base + annotation_compass(location = "tr", style = compass_sinan())
# Example 3: True north (requires a CRS)
base +
ggplot2::coord_sf(crs = "+proj=lcc +lon_0=-100 +lat_1=33 +lat_2=45") +
annotation_compass(which_north = "true")
# Example 4: CRS injection (when not using coord_sf directly)
lyr <- annotation_compass(location = "tr", which_north = "true")
lyr$geom_params$crs <- sf::st_crs("+proj=aeqd +lat_0=35 +lon_0=105 +units=m +no_defs")
lyr <- annotation_compass(location = "tr", which_north = "true")
lyr$geom_params$crs <- sf::st_crs(
"+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs"
)
ggplot() +
geom_boundary_cn(crs = "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs") +
lyr +
coord_sf(crs = "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m +no_defs") +
theme_minimal()
# Example 2: Custom style & position (top-right)
base + annotation_compass(location = "tr", style = compass_sinan())
# Example 2: Custom style & position (top-right)
base + annotation_compass(style = compass_sinan())
base + annotation_compass()
base + annotation_compass()+annotation_scalebar()
# Ensure all default geodata are present:
paths <- check_geodata()
# Ensure all default geodata are present:
paths <- check_geodata()
# Ensure all default geodata are present (mirror-first for CN):
paths <- check_geodata()
cat(">> ggmapcn 被加载自: ", find.package("ggmapcn"), "\n")
cat(">> extdata 目录     : ", system.file("extdata", package = "ggmapcn"), "\n")
# 你看到的“确实存在的那个文件名”
fname <- "boundary.rda"  # 换成你关心的文件名
ext_dir  <- system.file("extdata", package = "ggmapcn")
cache_dir <- tools::R_user_dir("ggmapcn", "data")
cat(">> extdata 是否存在该文件: ", file.exists(file.path(ext_dir, fname)), "\n")
if (file.exists(file.path(ext_dir, fname))) {
print(file.info(file.path(ext_dir, fname))[c("size","mode","mtime")])
}
cat(">> cache  是否存在该文件: ", file.exists(file.path(cache_dir, fname)), "\n")
if (file.exists(file.path(cache_dir, fname))) {
print(file.info(file.path(cache_dir, fname))[c("size","mode","mtime")])
}
# 再跑一次 check_geodata，看它“打算”去哪儿
paths <- check_geodata(
files = fname,
quiet = FALSE,
overwrite = FALSE,
local_dirs = character(0) # 暂时不加，以便看清 extdata/cache 流程
)
cat(">> 函数返回路径: ", paths, "\n")
# Basic: ensure default files exist (CN-friendly mirror first)
paths <- check_geodata()
paths <- check_geodata()
paths  # absolute paths (NA if a file could not be obtained)
check_geodata()
check_geodata()
?geom_mapcn
# Plot provincial map (default)
ggplot() +
geom_mapcn() +
theme_minimal()
# Filter specific provinces
ggplot() +
geom_mapcn(filter_attribute = "name_en", filter = c("Beijing", "Shanghai"), fill = "red") +
theme_minimal()
# Use a Mercator projection
ggplot() +
geom_mapcn(crs = "+proj=merc", linewidth = 0.7) +
theme_minimal()
?annotation_compass
nc <- sf::st_read(system.file("shape/nc.shp", package="sf"), quiet = TRUE)
base <- ggplot2::ggplot() +
ggplot2::geom_sf(data = nc, fill = "grey90") +
ggplot2::theme_minimal()
# Example 1: Grid north (no CRS required), bottom-left
base + annotation_compass()
# Example 2: Custom style & position (top-left)
base + annotation_compass(location = "tl", style = compass_sinan())
# Example 3: True north (requires a CRS)
base +
ggplot2::coord_sf(crs = "+proj=lcc +lon_0=-100 +lat_1=33 +lat_2=45") +
annotation_compass(which_north = "true")
china_proj <- "+proj=aeqd +lat_0=35 +lon_0=105 +ellps=WGS84 +units=m"
ggplot2::ggplot() +
geom_boundary_cn(crs = china_proj) +
annotation_compass(location = "tr", which_north = "true") +
annotation_scalebar(location = "bl") +
ggplot2::coord_sf(crs = china_proj) +
ggplot2::theme_minimal()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
# Example 4: Advanced usage with custom CRS
Albers <- "+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +
datum=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = Albers) +
annotation_compass(location = "tl", which_north = "true") +
annotation_scalebar(location = "bl", fixed_width = 500000, display_unit = "km") +
coord_sf(crs = Albers) +
theme_minimal()
ggplot() +
geom_boundary_cn(
coastline_color = "blue",
province_color = "grey70",
province_linetype = "dashed"
) +
theme_minimal()
# Example 4: Advanced usage with custom CRS
Albers <- "+proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=105 +x_0=0 +y_0=0 +
datum=WGS84 +units=m +no_defs"
ggplot() +
geom_boundary_cn(crs = Albers) +
annotation_compass(location = "tl", which_north = "true") +
annotation_scalebar(location = "bl", fixed_width = 500000, display_unit = "km") +
coord_sf(crs = Albers) +
theme_minimal()
devtools::document()
devtools::check()
help(package = "ggmapcn") # 包索引页
?ggmapcn                  # 应出现包首页
devtools::document()
pkgload::dev_help('ggmapcn')
??ggmapcn
??`ggmapcn-package`
??ggmapcn-package
# Plot provincial map
ggplot() +
geom_mapcn() +
theme_minimal()
# Plot provincial map
ggplot() +
geom_mapcn() +
theme_minimal()
# Plot provincial map
ggplot() +
geom_mapcn() +
theme_minimal()
# Plot provincial map
ggplot() +
geom_mapcn() +
theme_minimal()
# Plot provincial map
ggplot() +
geom_mapcn() +
theme_minimal()
?geom_mapcn
# Example 2: Filter specific provinces
ggplot2::ggplot() +
geom_mapcn(filter_attribute = "name_en",
filter = c("Beijing", "Shanghai"),
fill = "red") +
ggplot2::theme_minimal()
library(ggplot2)
library(dplyr)
library(ggmapcn)
# Example user data
df <- tibble::tibble(
province = c("Beijing", "Shanghai"),
Energy_consum = c(1, 2)
)
# Load China province map
china_prov <- load_map_data("China_sheng.rda")
# 找到 extdata 文件路径
file_path <- system.file("extdata", "China_sheng.rda", package = "ggmapcn")
# 加载 .rda 里存的对象
load(file_path)  # 会得到一个叫 China_sheng 的 sf 对象
# 合并用户数据
china_prov <- dplyr::left_join(China_sheng, df, by = c("name_en" = "province"))
# 画图
ggplot(china_prov) +
geom_sf(aes(fill = Energy_consum), color = "black") +
scale_fill_continuous(name = "Energy Consumption") +
theme_minimal()
View(China_sheng)
View(df)
# 加载地图
file_path <- system.file("extdata", "China_sheng.rda", package = "ggmapcn")
load(file_path)  # 得到 China_sheng
# 用户数据
df <- tibble::tibble(
province = c("Beijing", "Shanghai"),
Energy_consum = c(1, 2)
)
# 合并
china_prov <- dplyr::left_join(China_sheng, df, by = c("name_en" = "province"))
# 画图
ggplot() +
geom_sf(data = china_prov, aes(fill = Energy_consum), color = "black") +
scale_fill_continuous(name = "Energy Consumption") +
theme_minimal()
ggplot2::ggplot() +
geom_mapcn() +
ggplot2::theme_minimal()
?`compass-styles`
grid::grid.newpage(); grid::grid.draw(north_arrow_classic())
grid::grid.newpage(); grid::grid.draw(north_arrow_solid())
grid::grid.newpage(); grid::grid.draw(compass_rose_simple())
grid::grid.newpage(); grid::grid.draw(compass_rose_classic())
grid::grid.newpage(); grid::grid.draw(compass_rose_circle())
grid::grid.newpage(); grid::grid.draw(compass_guiding_fish())
grid::grid.newpage(); grid::grid.draw(compass_sinan())
grid::grid.newpage(); grid::grid.draw(compass_guiding_fish())
grid::grid.newpage(); grid::grid.draw(compass_rose_classic())
grid::grid.newpage(); grid::grid.draw(compass_rose_simple())
grid::grid.newpage(); grid::grid.draw(north_arrow_solid())
?annotation_scalebar
nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"), quiet = TRUE)
base_plot <- ggplot2::ggplot() +
ggplot2::geom_sf(data = nc, fill = "grey90") +
ggplot2::theme_minimal()
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl")
# Example 2: Ticks style, top-right
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "tr", style = "ticks")
# Example 3: Geographic CRS (EPSG:4326), approximate meters (warns)
base_plot + ggplot2::coord_sf(crs = 4326) +
annotation_scalebar(location = "bl", geographic_mode = "approx_m")
# Example 4: Geographic CRS, display in degrees
base_plot + ggplot2::coord_sf(crs = 4326) +
annotation_scalebar(location = "bl", geographic_mode = "degrees")
# Example 5: Force a 100 km bar (projected CRS)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl", fixed_width = 100000, display_unit = "km",
line_col = "red")
# Example 5: Force a 100 km bar (projected CRS)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl", fixed_width = 100000, display_unit = "km",
line_col = "red")
nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"), quiet = TRUE)
base_plot <- ggplot2::ggplot() +
ggplot2::geom_sf(data = nc, fill = "grey90") +
ggplot2::theme_minimal()
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl")
# Example 2: Ticks style, top-right
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "tr", style = "ticks")
# Example 3: Geographic CRS (EPSG:4326), approximate meters (warns)
base_plot + ggplot2::coord_sf(crs = 4326) +
annotation_scalebar(location = "bl", geographic_mode = "approx_m")
# Example 5: Force a 100 km bar (projected CRS) with red lines
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl", fixed_width = 100000, display_unit = "km",
line_col = "red")
}
# Example 5: Force a 100 km bar (projected CRS) with red lines
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl", fixed_width = 100000, display_unit = "km",
line_col = "red")
# Since ggplot2 and sf are in Imports, we can use @examples directly.
nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"), quiet = TRUE)
base_plot <- ggplot2::ggplot() +
ggplot2::geom_sf(data = nc, fill = "grey90") +
ggplot2::theme_minimal()
# Example 1: Projected CRS (accurate, auto-sized)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl")
# Example 2: Ticks style, top-right (now correctly rendered)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "tr", style = "ticks")
# Example 3: Geographic CRS (EPSG:4326), approximate meters (warns)
base_plot + ggplot2::coord_sf(crs = 4326) +
annotation_scalebar(location = "bl", geographic_mode = "approx_m")
# Example 5: Force a 100 km bar with red lines (now works correctly)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "bl", fixed_width = 100000, display_unit = "km",
line_col = "red")
help("annotation_scalebar")
help("annotation_scalebar")
#' A Test Function
#'
#' This is a test with **bold text** and a link to [dplyr::filter].
#'
#' @return A character string.
#' @export
test_func <- function() {
"hello"
}
?test_func
?test_func
sessionInfo()
options(help_type = "html")
?test_func
# install.packages("usethis") # 如果没安装过，先运行这行
library(usethis)
edit_r_profile()
options(help_type = "html")
?test_func
# Example 2: Ticks style, top-right (now correctly rendered)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "tr", style = "ticks")
# Example 2: Ticks style, top-right (now correctly rendered)
base_plot + ggplot2::coord_sf(crs = 32617) +
annotation_scalebar(location = "tr", style = "bar")
# Example 2: Ticks style, top-right (now correctly rendered)
base_plot + ggplot2::coord_sf(crs = 32617) +
ggspatial::annotation_scale(location = "tr", style = "bar")
